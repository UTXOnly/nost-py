version: '3'
services:
  websocket_handler:
    build:
      context: .
      dockerfile: Dockerfile.websocket_handler
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://172.28.0.7:4317
    ports:
      - 8008:8008
    networks:
      my_network:
        ipv4_address: 172.28.0.2

  event_handler:
    build:
      context: .
      dockerfile: Dockerfile.event_handler
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://172.28.0.7:4317
      - REDIS_HOST=${REDIS_HOST}
      - PGDATABASE=${PGDATABASE}
      - PGUSER=${PGUSER}
      - PGPASSWORD=${PGPASSWORD}
      - PGPORT=${PGPORT}
      - PGHOST=${PGHOST}
    networks:
      my_network:
        ipv4_address: 172.28.0.3
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:14
    environment:
      - POSTGRES_DB=${PGDATABASE}
      - POSTGRES_USER=${PGUSER}
      - POSTGRES_PASSWORD=${PGPASSWORD}
    ports:
      - 5432:5432
    networks:
      my_network:
        ipv4_address: 172.28.0.4
    command: postgres -c 'config_file=/postgresql.conf'
    volumes:
      - ./postgresql.conf:/postgresql.conf
      - ./postgresql/data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PGUSER}"] # database username here - nostr, should be changed if other user
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    container_name: redis-cache
    ports:
      - "6379:6379"
    networks:
      my_network:
        ipv4_address: 172.28.0.6

  nginx-certbot:
    build: .
    #image: bhartford419/nginx-certbot:nostpyv4
    environment:
      - DOMAIN=${DOMAIN}
      - DOCKER_SVC=172.17.0.1
      - SVC_PORT=8008
      - VERSION=${VERSION}
      - CONTACT=${CONTACT}
      - HEX_PUBKEY=${HEX_PUBKEY}
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - /var/lib/letsencrypt:/var/lib/letsencrypt
    depends_on:
      - websocket_handler

  opentelemetry-collector:
    image: otel/opentelemetry-collector-contrib:latest
    environment:
      - DD_API_KEY=${DD_API_KEY}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup:/host/sys/fs/cgroup:ro
      - /sys/kernel/debug:/sys/kernel/debug
      - ./config-opentelemetry.yaml:/etc/otel/config.yaml
    networks:
      my_network:
        ipv4_address: 172.28.0.7
    ports:
      - "55680:55680"
      - "4317:4317"
      - "4318:4318"
    command: ["--config=/etc/otel/config.yaml"]

volumes:
  postgres_data:

networks:
  nostpy_network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16


